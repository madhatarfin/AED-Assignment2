/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import model.City;
import model.Community;
import model.DataSource;
import model.Doctor;
import model.Hospital;

/**
 *
 * @author arfinansari
 */
public class PatientDoctorBrowse1JFrame extends javax.swing.JFrame {

    /**
     * Creates new form PatientDoctorBrowse1JFrame
     */
    
    private List<Hospital> hospitals = new ArrayList<>();
    private Hospital selectedHospital;
    public PatientDoctorBrowse1JFrame() {
        initComponents();
        cbListOfCity1.setSelectedItem(null);
        DataSource dataSource = DataSource.getInstance();
        Set<City> cities =  dataSource.getCitySet();
        cities.forEach(city->{
            cbListOfCity1.addItem(city.getName());
        });
         cbListOfCity1.setSelectedItem(null);
        cbListOfCommunity1.removeAllItems();
        cbListOfHospital1.removeAllItems();
            cbListOfCommunity1.setSelectedItem(null);
            cbListOfHospital1.setSelectedItem(null);
            DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.addColumn("Doctor name");
        tableModel.addColumn("Age");
        tableModel.addColumn("Gender");
        tableModel.addColumn("Specialist");
     
        jTable1.setModel(tableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        cbListOfCity = new javax.swing.JLabel();
        cbListOfCommunity = new javax.swing.JLabel();
        cbListOfHospital = new javax.swing.JLabel();
        cbListOfCity1 = new javax.swing.JComboBox<>();
        cbListOfCommunity1 = new javax.swing.JComboBox<>();
        cbListOfHospital1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Doctor Browse List");

        jButton1.setText("Enter");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        cbListOfCity.setText("City");

        cbListOfCommunity.setText("Community");

        cbListOfHospital.setText("Hospital");

        cbListOfCity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbListOfCity1ActionPerformed(evt);
            }
        });

        cbListOfCommunity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbListOfCommunity1ActionPerformed(evt);
            }
        });

        cbListOfHospital1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbListOfHospital1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbListOfCity)
                                    .addComponent(cbListOfCommunity)
                                    .addComponent(cbListOfHospital))
                                .addGap(91, 91, 91)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbListOfHospital1, 0, 134, Short.MAX_VALUE)
                                    .addComponent(cbListOfCity1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cbListOfCommunity1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbListOfCity))
                    .addComponent(cbListOfCity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbListOfCommunity)
                    .addComponent(cbListOfCommunity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbListOfHospital)
                    .addComponent(cbListOfHospital1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(126, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void cbListOfCommunity1ActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        // TODO add your handling code here:
   
   {
       for(City city:DataSource.getInstance().getCitySet()){
       if(city.getName().equals(cbListOfCity1.getSelectedItem())){
           for(Community community:city.getCommunities()){
               if (community.getName().equals(cbListOfCommunity1.getSelectedItem())){
                  
            cbListOfHospital1.removeAllItems();
             cbListOfHospital1.setSelectedItem(null);
             hospitals.clear();
             hospitals.addAll(community.getHospital());
                   for (Hospital hospital : community.getHospital()) {
                       
             cbListOfHospital1.addItem(hospital.getName());    
                   break;
                   }
               
               }
       }
       }
  
   }
    }                                                  
   }
    private void cbListOfHospital1ActionPerformed(java.awt.event.ActionEvent evt) {                                                  
       
    }                                                 

    private void cbListOfCity1ActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
try
      {
         for(City city:DataSource.getInstance().getCitySet()){
             if(cbListOfCity1!=null && city.getName().equals(cbListOfCity1.getSelectedItem())){
             cbListOfCommunity1.removeAllItems();
            cbListOfCommunity1.setSelectedItem(null);
            city.getCommunities().forEach(community->
            {
                cbListOfCommunity1.addItem(community.getName());
            });
            break;
             }
          }
       
      }
       catch (Exception e) 
       {
          e.printStackTrace();
}
    }                                             

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {                                      
        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.addColumn("Doctor name");
        tableModel.addColumn("Age");
        tableModel.addColumn("Gender");
        tableModel.addColumn("Specialist");
        
         for(Hospital hospital:hospitals){
        if(cbListOfHospital1.getSelectedItem().equals(hospital.getName())){
            selectedHospital = hospital;
            break;
        }
                }
         int counter =0;
         for(Doctor doctor :selectedHospital.getDoctorDirectory().getDoctor()){
             tableModel.insertRow(counter, new Object[]{doctor.getDoctorName(),doctor.getAge(),doctor.getGender(),doctor.getSpecialist()});
         }
        jTable1.setModel(tableModel);
    }                                     

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientDoctorBrowse1JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientDoctorBrowse1JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientDoctorBrowse1JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientDoctorBrowse1JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientDoctorBrowse1JFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel cbListOfCity;
    private javax.swing.JComboBox<String> cbListOfCity1;
    private javax.swing.JLabel cbListOfCommunity;
    private javax.swing.JComboBox<String> cbListOfCommunity1;
    private javax.swing.JLabel cbListOfHospital;
    private javax.swing.JComboBox<String> cbListOfHospital1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration                   
}
